/*

In this file:

// A. Citywide header and footer
// B. Local header and primary nav
// C. Skip Menu
// D. Forms
// E. Gradients
// F. Featured panels
// G. Banner with background
// H. Extensible lists
// I. Matrix rows
// J. Accordion and button toggle
// K. Tabs
// L. Cards
// M. Tables

*/

////////////////////////////////////////
// A. Citywide header and footer
////////////////////////////////////////

$nyc-header-footer-text-color: $white;
$nyc-header-footer-bg-color: $black;

#nyc-top-header,
#nyc-bottom-footer {

  & p,
  a {
    color: $nyc-header-footer-text-color;
  }
}

#nyc-top-header {
  font-size: $fs-sm;

  a {
    font-weight: $font-weight-bold;
  }

  // Display block on NYC logo ensures vertical alignment

  img {
    display: block;
  }
}

#nyc-bottom-footer {
  font-size: $fs-md;
}

#nyc-top-header,
#nyc-bottom-footer {
  background: $nyc-header-footer-bg-color;
}

#nyc-bottom-footer {
  hr {
    @extend .opacity-20;
  }
}

#back-to-top {
  @extend .container-fluid;
  @extend .fixed-bottom;
  opacity: 0;

  text-align: right;
  transition: opacity .1s linear 0s;

  &.show {
    opacity: 1;
  }
}

////////////////////////////////////////
// B. Local header and primary nav
////////////////////////////////////////

// Primary Navigation variables set here override Bootstrap default component settings

// Global Header background color
$global-header-bg-color: white;

// Global header border color
$global-header-border-color: $border-color;

// Primary nav font weight
$primary-nav-link-font-weight: $font-weight-bold;

// Set all links (and toggle buttons) in global header, not including links inside '#nyc-top-header'
$primary-nav-link-color: $body-color;

// Global header link active (current page) color
$primary-nav-link-active-color: $secondary;

// Make '.nav-item' selectors the same width regardless of text width
$nav-pills-consistent-width: true;

// Use dark header settings (set the background color inside 'Reset variables for dark header' conditional below)
$global-header-dark: false;

// Reset variables for dark header
@if $global-header-dark {

  $global-header-bg-color: $dark;

  $global-header-border-color: rgba(black, 0.5);
  $primary-nav-link-color: $white;
}

// Toggle button color
$global-header-toggle-button-color: $primary-nav-link-color;

#global-header {
  background-color: $global-header-bg-color;

  @if $global-header-dark {

    #nyc-logo-placeholder {
      fill: $white;
    }

    .goog-te-gadget,
    .goog-logo-link {
      color: $white;
    }

    .goog-logo-link img {
      margin-left: .5rem;
      margin-right: .5rem;
      transform: scale(1.25);
    }
  }

  // Remove border radius when global '$enable-rounded' is set to true

  .btn,
  .input,
  .nav-link,
  .dropdown-menu,
  .form-control {
    border-radius: 0;
  }

  button[data-toggle="collapse"] {
    color: $global-header-toggle-button-color;
  }

  .nav-link,
  .dropdown-menu a {
    color: $primary-nav-link-color;
  }

  [class*="border-"] {
    border-color: $global-header-border-color !important;
  }
  
  // Add opacity to toggle buttons on 'expanded'

  button[data-toggle="collapse"] {
    &[aria-expanded="true"] {
      @extend .opacity-50;

      @include transition;
    }
  }

  // Set primary nav color and active states (both '.nav-pills' and '.nav-right')

  .nav-link {
    font-weight: $primary-nav-link-font-weight;

    &.active {
      text-decoration: underline;
      color: $primary-nav-link-active-color;
    }
  }

  // Primary Nav (.nav-pills)

  .nav-pills {
    @extend .nav-fill;

    border-left: $border-width solid $global-header-border-color;

    .nav-item {
      border-right: $border-width solid $global-header-border-color;

      @if $nav-pills-consistent-width {
        @include media-breakpoint-up(lg) {
          flex: 1;
        }
      }
    }

    .nav-link {
      background: transparent;

      &.active {
        text-decoration: underline;
        color: $primary-nav-link-active-color;
      }
    }
  }

  // Set .dropdown-menu styles

  .dropdown-menu {
    border: none;
    padding: $nav-link-padding-y $nav-link-padding-x;
    

    @if $global-header-dark {
      background-color: $global-header-bg-color;
    }
  }

  // Remove unneeded margin from .dropdown-menu (within nav right)

  .nav:not(.nav-pills) {
    .dropdown-menu {
      margin: 0;
      @extend .shadow;
    }
  }

  // Improve .dropdown-menu when present within .nav-pills

  .nav-pills .dropdown-menu {
    width: 100%;
    left: 0;
    margin: 0;

    // When dropdowns are flush left or right, remove Bootrap transform and reposition y axis
    transform: none !important;
    top: 100% !important;
  }

  // When '.nav-item-search' is present within '#nav-primary'

  .nav:not(.nav-pills) {
    .nav-item-search {
      border: $border-width solid $global-header-border-color;
    }
  }

  .nav-item-search {
    position: relative;

    form,
    input {
      width: 100%;
    }

    form {
      display: flex;
      height: 100%;
      position: relative;

      @if $global-header-dark {

        input,
        button {
          color: white;
        }

        input {
          background-color: rgba(black, 0.2);
        }

        ::placeholder {
          color: $light;
          opacity: 1;
        }
      }
    }

    button {
      position: absolute;
      right: $nav-link-padding-x;
      top: 50%;
      -ms-transform: translateY(-50%);
      transform: translateY(-50%);
      width: $nav-item-search-button-width;
    }

    input {
      align-self: stretch;
      font-size: $fs-md;
      border: 0;
      padding-top: $nav-link-padding-y;
      padding-right: calc(#{$nav-item-search-button-width} + #{$nav-link-padding-x});
      padding-bottom: $nav-link-padding-y;
      padding-left: $nav-link-padding-x;
    }
  }

  @include media-breakpoint-down(md) {
    .nav-item {
      border-top: 1px solid $global-header-border-color;
      width: 100%;

      // Left align nav-link text

      &.nav-link {
        text-align: left;
      }
    }

    .nav-item,
    .dropdown-menu {
      background: none;
    }

    .dropdown-toggle {
      display: flex;
      justify-content: space-between;
      align-items: center;

      @if $enable-caret {
        &[aria-expanded="true"]::after {
          @include caret-up;
        }
      }
    }

    .dropdown-menu {
      position: static !important;
      width: 100%;
      -webkit-transform: none !important;
      transform: none !important;
    }

    .nav:not(.nav-pills) {
      .dropdown-menu {
        margin: 0;
        box-shadow: none !important;
      }
    }

  }
}

/* #global-header */

////////////////////////////////////////
// C. Skip Menu
////////////////////////////////////////

// Visible only on keyboard tabbing

.skip-menu {
  @extend .position-absolute;
  @extend .shadow;

  top: $spacer;
  left: $spacer;
  z-index: 900;
  padding: $spacer-2;
  font-size: $fs-md;
  background: $light;
  color: $body-color;

  &:hover {
    color: currentColor;
  }
}

////////////////////////////////////////
// D. Forms
////////////////////////////////////////

// Make alerts focusable for accessibility

.alert {
  outline: 0;

  &[tabindex="-1"] {
    &:focus {
      box-shadow: 0 0 0 $input-btn-focus-width theme-color("danger");
    }
  }
}

.alert-heading {
  font-weight: $font-weight-bold;
  margin-bottom: $spacer-1;
}

.alert-text {
  font-size: $fs-md;

  a {
    @extend .text-reset;
  }
}

// Apply custom valdation for accessibility
// The following works only when custom './js/validation.js' is present in the footer of the form's page

.form-group {
  .invalid-feedback {
    display: none;
    margin-bottom: 0.5rem;
  }

  .invalid-description {
    font-weight: $font-weight-bold;
    margin-left: $spacer-1;
    margin-right: $spacer-1;
  }

  &.is-invalid {

    label,
    .label {
      color: theme-color("danger");
    }

    .invalid-feedback {
      display: block;
    }

    .form-control:invalid {
      &:focus {
        box-shadow: 0 0 0 $input-btn-focus-width theme-color("danger");
      }
    }
  }
}

// Fieldset and Legend

fieldset,
.fieldset {
  border: $border-width solid $border-color;
  margin-bottom: $spacer-5;

  @if $enable-rounded {
    overflow: hidden;
    border-radius: $border-radius;
  }
}

legend,
.legend {
  font-size: $fs-md;
  font-weight: $font-weight-normal;
  background: $primary;
  color: white;
  padding: $spacer-2;
  margin-bottom: 0;
}

// File upload

.wrap-file-input {
  position: relative;

  input[type="file"] {
    &:focus+label {
      @include transition;

      border-color: $input-focus-border-color;
      box-shadow: $input-btn-focus-box-shadow;
    }
  }

  .file-input-label {
    border: $border-width solid $input-border-color;
    display: block;

    @if $enable-rounded {
      border-radius: $border-radius;
    }

    &:hover {

      .file-choose,
      .file-name {
        text-decoration: none;
      }
    }

    .file-choose,
    .file-name {
      width: 100%;
      text-align: center;
    }

    .file-choose {
      @extend .has-icon;

      @if $enable-rounded {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
      }
    }

    .file-name {
      @extend .font-weight-normal;

      @extend .text-truncate;

      padding: $spacer-1;
      display: block;
      white-space: normal;
    }
  }

  @include media-breakpoint-down(md) {

    .file-choose,
    .file-name {
      display: block !important;
    }
  }
}

////////////////////////////////////////
// E. Gradients
////////////////////////////////////////

// Gradients call a custom mixin in '_c-custom-mixins.scss'

[class*="overlay-gradient-"] {
  position: relative;
  overflow: hidden;

  &::before {
    content: "";
    position: absolute;
    top: -1px;
    left: -1px;
    right: -1px;
    bottom: -1px;
  }
}

// Gradient Overlays

.overlay-gradient-y-black::before {
  @include linear-gradient;
}

.overlay-gradient-x-white::before {
  @include linear-gradient($direction: to left, $first-color: white, $second-color: white, $first-color-opacity: 0, $second-color-opacity: 1, $first-color-position: 0%, $second-color-position: 100%);
}

.overlay-gradient-x-primary::before {
  @include linear-gradient($direction: to left, $first-color: $primary, $second-color: $primary, $first-color-opacity: 0, $second-color-opacity: 0.8, $first-color-position: 0, $second-color-position: 100%);
}

.overlay-gradient-x-info::before {
  @include linear-gradient($direction: to right, $first-color: theme-color("info"), $second-color: theme-color("info"), $first-color-opacity: 0, $second-color-opacity: 0.75, $first-color-position: 0, $second-color-position: 100%);
}

////////////////////////////////////////
// F. Featured panels
////////////////////////////////////////

@mixin featured-panel-responsive-settings {
  
  .card-img-overlay {
    position: relative;
  }

  img.full-opacity-on-device {
    opacity: 1;
  }

  [class*="overlay-gradient"]::before {
    display: none;
  }

  [class*="border"] {
    border: none !important;
  }

  [class*="shadow"] {
    box-shadow: none !important;
  }

  [class*="text-shadow"] {
    text-shadow: none;
  }
}

.featured-panel {

  >.card,
  .card-img {
    border: none;
    border-radius: 0;
  }

  .card-img-overlay {
    padding: 0;
  }

  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @if $next {
      &.device-#{$next} {
        @include media-breakpoint-down($breakpoint) {
          @include featured-panel-responsive-settings;
        }
      }
    }
  }
}

////////////////////////////////////////
// G. Banner with background
////////////////////////////////////////

$banner-with-background-height: 350px;
$banner-with-background-opacity: 0.25;

.banner-with-background {
  position: relative;
  overflow: hidden;
  
  min-height: $banner-with-background-height;

  >* {
    position: relative;
    z-index: auto;
  }

  &::before {
    content: "";
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: auto;

    opacity: $banner-with-background-opacity;

    @include apply-background-image;
  }

  // Add your own backround classes and append them to the '.banner-with-background' selector

  &.oculus {
    &::before {
      @include apply-background-image("oculus");
    }
  }

  // Make height smaller on smaller viewports

  @include media-breakpoint-down(md) {
    min-height: calc(#{$banner-with-background-height} * 0.75);
  }
  
}

////////////////////////////////////////
// H. Extensible lists
////////////////////////////////////////

// Note: Link lists can be used in place of Bootstrap's .nav when Link padding is unneeded.
// Link lists are ideal for horizontal navs when supporting 'rtl'

$extensible-list-margin: 0.5em;

@mixin extensible-list-stack {
  margin-bottom: $extensible-list-margin;

  &:last-child {
    margin-bottom: 0;
  }
}

@mixin responsive-extensible-list-settings {
  // Remove flex properties
  display: block !important;

  // Remove side margin and padding
  margin-right: 0;
  margin-left: 0;
  padding-right: 0;
  padding-left: 0;

  li {
    @include extensible-list-stack;

    display: block !important;
    margin-left: 0 !important;
    margin-right: 0 !important;
  }
}

.extensible-list {
  @include list-unstyled;

  margin-bottom: 0;

  // fixed padding added by user agent stylesheet after translation
  -webkit-padding-start: 0;

  li ul {
    margin-top: $extensible-list-margin;

    // Indent nested lists by default

    padding-left: $nav-link-padding-x !important;
    padding-right: $nav-link-padding-x !important;
  }

  li {
    @include extensible-list-stack;
  }

  &.horizontal {
    display: flex;
    flex-direction: row;
    align-items: center;
    margin-left: -$extensible-list-margin;
    margin-right: -$extensible-list-margin;

    li {
      margin-bottom: 0;
      margin-left: $extensible-list-margin;
      margin-right: $extensible-list-margin;
    }

    @each $breakpoint in map-keys($grid-breakpoints) {
      $next: breakpoint-next($breakpoint, $grid-breakpoints);
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

      @if $next {
        &.device-#{$next} {
          @include media-breakpoint-down($breakpoint) {
            @include responsive-extensible-list-settings;
          }
        }
      }
    }
  }
}

////////////////////////////////////////
// I. Matrix rows
////////////////////////////////////////

// Note: Add to '.row' class to create a grid of colums
// with equal spacing on all sides, not just the gutters

$matrix-border-padding: ($border-width / 2);
$matrix-gutter-padding: ($grid-gutter-width / 4);

.matrix-border {
  margin-top: -$matrix-border-padding;
  margin-right: -$matrix-border-padding;
  margin-bottom: -$matrix-border-padding;
  margin-left: -$matrix-border-padding;

  >[class^="col"] {
    padding: $matrix-border-padding;
  }
}

.matrix-gutter {
  margin-top: -$matrix-gutter-padding;
  margin-right: -$matrix-gutter-padding;
  margin-bottom: -$matrix-gutter-padding;
  margin-left: -$matrix-gutter-padding;

  >[class^="col"] {
    padding: $matrix-gutter-padding;
  }
}

////////////////////////////////////////
// J. Accordion and button toggle 
////////////////////////////////////////

%fa-icon {
  font-family: $font-awesome;
  font-weight: 900;
  font-size: inherit;
  font-style: normal;
  font-variant: normal;
  text-rendering: auto;
  color: currentColor;
}

// Accordion Preferences

$accordion-button-border: false;
$accordion-button-shadow: false;

$accordion-title-color: $primary;
$accordion-bg-color: $light;
$accordion-margin-y: $spacer-1;

.btn-toggle,
.accordion-group {

  [data-toggle="collapse"] {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  [data-toggle="collapse"]::after {
    margin-left: $spacer-2;
  }

}

// Button toggle

.btn-toggle {

  [data-toggle="collapse"] {

    overflow: hidden;

    &::after {
      content: "\f067";
      @extend %fa-icon;
    }

    // Change the right icon here. Go to https://fontawesome.com/icons
    // Find your icons and paste the unicode below

    &[aria-expanded="true"]::after {
      content: "\f068";
    }

    &[aria-expanded="false"]::after {
      content: "\f067";
    }
  }
}

// Accordions

.accordion-group {

  .card,
  .card-header {
    border: 0;

    @if $enable-rounded {
      border-radius: $border-radius;
    }

    @else {
      border-radius: 0;
    }
  }

  .card {
    background-color: $accordion-bg-color;
    margin-bottom: $accordion-margin-y;

    &:last-child {
      margin-bottom: 0;
    }
  }

  a[data-toggle="collapse"] {

    @if $accordion-button-border {
      border: $border-width solid $border-color;
    }

    @if $accordion-button-shadow {
      @extend .shadow-sm;
    }

    color: $accordion-title-color;

    &:after {
      content: "\f067";
      @extend %fa-icon;
    }

    &[aria-expanded="true"] {

      @if $accordion-button-shadow {
        @extend .shadow;
      }

    }

    // Change the right icon here. Go to https://fontawesome.com/icons
    // Find your icons and paste the unicode below

    &[aria-expanded="true"]:after {
      content: "\f106";
    }

    &[aria-expanded="false"]:after {
      content: "\f107";
    }
  }

}

////////////////////////////////////////
// K. Tabs
////////////////////////////////////////

// Tab link color (for both .nav-tabs and .nav-pills)

$tab-link-color: $link-color;
$tab-link-color: $body-color;

// Tab link active styles (for .nav-tabs only)

$nav-tab-active-color: $info;
$nav-tab-active-font-weight: $font-weight-bold;

@mixin device-nav-pills-and-tabs-settings {
  flex-direction: column;
  border-color: transparent;
  margin-bottom: $spacer-2;

  .nav-item {
    text-align: center;
    border-color: $border-color;
  }

  @if $enable-rounded {
    border-radius: $border-radius;

    .nav-item {
      border-top-left-radius: 0;
      border-top-right-radius: 0;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;

      &:first-child {
        border-top-left-radius: $border-radius;
        border-top-right-radius: $border-radius;
      }

      &:last-child {
        border-bottom-left-radius: $border-radius;
        border-bottom-right-radius: $border-radius;
      }
    }

    &+.tab-content {
      border-radius: $border-radius;
    }
  }
}

.nav-pills,
.nav-tabs {
  .nav-link {
    color: $tab-link-color;

    &.active {
      text-decoration: underline;
    }
  }

  .nav-item {
    text-align: center;
  }

  @each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @if $next {
      &.device-#{$next} {
        @include media-breakpoint-down($breakpoint) {
          @include device-nav-pills-and-tabs-settings;
        }
      }
    }
  }
}

// Nav tabs 'active' state

.nav-tabs .nav-item {
  &.active {
    font-weight: $nav-tab-active-font-weight;
    color: $nav-tab-active-color;
  }
}

// end each

// Adjustments for border-radius

@if $enable-rounded {

  .nav-pills,
  .nav-pills .nav-link {
    border-top-left-radius: $border-radius;
    border-top-right-radius: $border-radius;
  }

  .nav-pills .nav-link {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }

  .tab-content {
    border-bottom-left-radius: $border-radius;
    border-bottom-right-radius: $border-radius;
  }
}

////////////////////////////////////////
// L. Cards
////////////////////////////////////////

$default-card-borders: false;
$default-card-backgrounds: false;

@if $default-card-borders == false {

  .card,
  .card-header,
  .card-footer {
    border: none;
  }
}

@if $default-card-backgrounds == false {

  .card-header,
  .card-footer {
    background-color: transparent;
  }
}

////////////////////////////////////////
// N. Tables
////////////////////////////////////////

$table-header-color: $info;
$table-font-size: $fs-md;

table {
  font-size: $table-font-size;

  th {
    color: $table-header-color;
  }

  &.table-stack-on-mobile {
    thead td:empty {
      border: none;
    }

    @include media-breakpoint-up(lg) {
      .psuedo-cell {
        display: none;
      }
    }


    @include media-breakpoint-down(md) {
      thead {
        @include sr-only;
      }

      tbody tr {
        display: flex;
        flex-flow: row wrap;
        border-top: $border-width solid $table-header-color;

        +tr {
          margin-top: $spacer-3;
        }
      }

      td {
        display: flex;
        align-items: center;
        word-break: break-all;
        hyphens: auto;

        &[aria-hidden="true"] {
          flex-basis: 100%;
        }

        &:not([aria-hidden="true"]) {
          flex-basis: 100%;
          padding-top: 0;
          border-top: none;
        }

        &:nth-of-type(2),
        &:first-of-type {
          border: none;
        }
      }

      th {
        flex-basis: 100%;
        border-bottom: $border-width solid $border-color;
        border-width: 0 0 $border-width 0;
        font-size: 1.25em;
      }
    }
  }
}
